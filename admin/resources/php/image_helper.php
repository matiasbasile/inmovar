<?phpfunction max_filename($file,$suffix = "_MAX") {    $ext = strtolower(end(explode(".",$file)));    return str_replace(".$ext","$suffix.$ext",$file);}// NOTA: La extension se pasa por parametro porque en general $imagen es un temporal con extensin .tmp//redimensiona en ancho y altofunction redimensionarLimites($imagen,$anchoMaximo,$altoMaximo,$destino,$ext="jpg"){    if ($ext == "jpg" || $ext == "jpeg") {        $img=imagecreatefromjpeg($imagen);    } elseif ($ext == "png") {        $img=imagecreatefrompng($imagen);    }    	$d = getimagesize($imagen);	$oAncho = $d[0];	$oAlto = $d[1];		$ancho = $oAncho;	$alto = $oAlto;		if ($oAncho > intval($anchoMaximo)) {		//Imagen Horizontal.		$ancho = $anchoMaximo;		$alto = ($oAlto * $anchoMaximo) / $oAncho;				if ($alto > $altoMaximo) {			$alto = $altoMaximo;			$ancho = ($oAncho * $altoMaximo) / $oAlto;		}	} else {		//Imagen Vertical.		if ($oAlto > $altoMaximo) {			$alto = $altoMaximo;			$ancho = ($oAncho * $altoMaximo) / $oAlto;		}	}		$nueva = imagecreatetruecolor($ancho,$alto);		imagecopyresampled($nueva,$img,0,0,0,0,$ancho,$alto,$oAncho,$oAlto);			    if ($ext == "jpg" || $ext == "jpeg") {        ImageJPEG($nueva,$destino,100);    } elseif ($ext == "png") {        imagepng($nueva,$destino);    }    	ImageDestroy($img);}function redimensionarCortar($imagen,$ancho,$alto,$destino,$ext="jpg"){    if ($ext == "jpg" || $ext == "jpeg") {        $img=imagecreatefromjpeg($imagen);    } elseif ($ext == "png") {        $img=imagecreatefrompng($imagen);    }        	//$img = ImageCreateFromJPEG($imagen);	$d = getimagesize($imagen);		$oAncho = $d[0];	$oAlto = $d[1];		if ($ancho / $oAncho > $alto / $oAlto) {		$rAncho = $ancho;		$rAlto = ($oAlto * $rAncho) / $oAncho;		$px = 0;		$py = ($alto - $rAlto) / 2;	} else {		$rAlto = $alto;		$rAncho = ($oAncho * $rAlto) / $oAlto;		$py = 0;		$px = ($ancho - $rAncho) / 2;	}		$nueva = imagecreatetruecolor($ancho,$alto);	imagecopyresampled($nueva,$img,$px,$py,0,0,$rAncho,$rAlto,$oAncho,$oAlto);	        if ($ext == "jpg" || $ext == "jpeg") {        ImageJPEG($nueva,$destino,100);    } elseif ($ext == "png") {        imagepng($nueva,$destino);    }    	ImageDestroy($img);}// Redimensiona a un ancho maximo.function redimensionarAnchoMaximo($imagen,$ancho,$destino,$ext="jpg"){    if ($ext == "jpg" || $ext == "jpeg") {        $img=imagecreatefromjpeg($imagen);    } elseif ($ext == "png") {        $img=imagecreatefrompng($imagen);    }    	$d = getimagesize($imagen);		$oAncho = $d[0];	$oAlto = $d[1];		if ($oAncho < $ancho) {		$rAncho = $oAncho;		$rAlto = $oAlto;	} else {		$rAncho = $ancho;		$rAlto = ($oAlto * $ancho) / $oAncho;	}			$nueva = imagecreatetruecolor($rAncho,$rAlto);	imagecopyresampled($nueva,$img,0,0,0,0,$rAncho,$rAlto,$oAncho,$oAlto);	    if ($ext == "jpg" || $ext == "jpeg") {        ImageJPEG($nueva,$destino,100);    } elseif ($ext == "png") {        imagepng($nueva,$destino);    }	ImageDestroy($img);}function redimensionarAltoMaximo($imagen,$alto,$destino,$ext="jpg"){    if ($ext == "jpg" || $ext == "jpeg") {        $img=imagecreatefromjpeg($imagen);    } elseif ($ext == "png") {        $img=imagecreatefrompng($imagen);    }	$d = getimagesize($imagen);		$oAncho = $d[0];	$oAlto = $d[1];		if ($oAlto < $alto) {		$rAncho = $oAncho;		$rAlto = $oAlto;	} else {		$rAncho = ($oAncho * $alto) / $oAlto;		$rAlto = $alto;	}			$nueva = imagecreatetruecolor($rAncho,$rAlto);	imagecopyresampled($nueva,$img,0,0,0,0,$rAncho,$rAlto,$oAncho,$oAlto);	    if ($ext == "jpg" || $ext == "jpeg") {        ImageJPEG($nueva,$destino,100);    } elseif ($ext == "png") {        imagepng($nueva,$destino);    }	ImageDestroy($img);}?>